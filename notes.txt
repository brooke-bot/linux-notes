How To open folder

Cd (name) 

-------------------------------------- 

To open a file: 

open (name).txt 

-------------------------------------- 

To move a file to a folder 

mv (file name) ____(folder)/ 

mv 

-------------------------------------- 

To create a folder: 

Use the commands mkdir ___________(name) 

 -------------------------------------- 

To create file: 

touch ______(name).txt 

--------------------------------------- 

To add something into the file: 

echo "______________(what text you want in the file)" >_______(name of file).txt 

-------------------------------------- 

To delete a folder: 

Use the commands rmdir ./__________(name)/ 

-------------------------------------- 

To delete a file: 

rm ./__________(file name) 

-------------------------------------- 

To edit name for file: 

Mv ________(name).txt __________(new name) 

-------------------------------------- 

to Use "nano" to edit the contents of files in vm linux: 

Nano _______________(name).txt 

· (Nano opens) 

· Rewrite message 

· CTRL+o (to check if you are in the correct file) 

· Enter 

· CTRL+x (to exit) 

Commands List: 

- ls 

- cd 

- pwd 

- mkdir 

- rmdir 

- rm 

- cp 

- mv 

- touch 

- file 

- zip 

- unzip 

- man  

- cat 

- less 

- su – 

- cd / 

- cd ~

- cd/ 


Command Details (Linix): 

------------------------------- 

- `ls` 

- Purpose: Lists the contents of a directory. 

- Usage: `ls` for basic listing, `ls -l` for detailed listing, `ls -a` to include hidden files. 

- Notes: Essential for quickly viewing what's in the current directory. 

 

- `cd` 

- Purpose: Changes the current directory. 

- Usage: `cd [directory path]` to move to a specific directory, `cd ..` to move up one directory level, `cd` or `cd ~` to return to the home directory. 

- Notes: Most commonly used for navigating through the filesystem. 

 

- `pwd` 

- Purpose: Prints the current directory path. 

- Usage: `pwd` to display the full path of the current directory. 

- Notes: Useful for confirming your current location in the filesystem. 

 

- `mkdir` 

- Purpose: Creates a new directory. 

- Usage: `mkdir [directory name]` to create a new directory in the current location. 

- Notes: Handy for organizing files into new folders. 

 

- `rmdir` 

- Purpose: Removes a directory. 

- Usage: `rmdir [directory name]` to delete an empty directory. 

- Notes: Used for cleaning up and removing unused directories. Note that the directory must be empty 

 

- 'rm' 

-usage: rm [options] file1 file2  

notes: the rm command deletes files from a directory  

 

- 'cp' 

-Usage: cp file1 file2 [target_path] 

-Notes: Use cp command to copy files from your current directory to another folder 

 

- 'mv' 

-Usage: mv file_or_directory [target_directory] 

-Notes: mv command is used to move a file or folder to another location  

 

- 'touch' 

-Usage: touch [options] [path_and_file_name] 

-Note: touch command is used to create a new emtpy file in a specific directory 

 

- 'file' 

-Usage:file [file_name] 

-Note: the file command checks a file type, such as TXT, PFP, or others 

 

- 'zip' 

-Usage: zip [options] zip_file_name file1 file2 

-Note: zip command compresses one or multiple files  

 

- 'unzip' 

-Usage: unzip [options] zip_file_name 

-Note: to extract a compressed file 

 

- 'man' 

-Usage: man [command] 

-Note: man is used to read the manual for any command 

 

- 'cat' 

-Usage: cat filename.txt 

-Note: opens the contents of a file  

 

- 'less' 

-Usage: less filename.txt 

-Note: allows you to scroll through a file 

 

-‘su –‘ 

Usage: su – 

Note: switch users 

 

-‘cd /’ 

Usage : cd /  

Note : To return to the root directory 


-'cd ~'
Note: Get to home directory

 
---------------------
GIT NOTES 
---------------------

 

-‘git commit’ 

Note: Takes the staged snapshot and commits it to the project history  

 

-‘git config’ 

-a way to set configuration options for your Git installation 

 

-‘git init’ 

Note: initializes a new Git repository  

 

-‘git log’ 

Note: lets you explore the previous revisions of a project 

 

-‘git merge’ 

Note: A powerful way to integrate changes from divergent branches 

 

-‘git pull’ 

Note: downloads a branch from a remote repository  

 

-“git push’ 

Note: lets you move a local branch to another repository  


------------------------
BASH SCRIPT COMMANDS
------------------------

Definition: A Bash script is a text file with commands for Bash shell, 
used to automate tasks and simplify system operations. You run it in the terminal to proform multiple commands at once.

-'echo'

Note: used to print out text


-'sleep'

Note: sleep is used to halt all current running bash scripts
Useage: can be use to create a delay between commands

echo 'starting...'
sleep 3
echo "3 seconds have passed

-'comments'

Note: User can add comments to their bash scripts


-'read'

Note: to take input from users


-'hello world'

Note: will create a new variable


-'wait'

Note: wait is a built in linux command that waits for completion of running proess


-variables

Note: variables are like containers that hold different types of information.

-----------------------------
BASIC INFO FOR BASH SCRIPTS
-----------------------------

-nano 

Note: this is a text editor that is used to wirite stuff IN to make the script

-#!/bin/bash

Note: is used as the first line in a bash script 

--------------------
SYSTEM MONITORING
--------------------

Definition: Sysyem monitoring is checking how well a computer or network is working. It looks at things like CPU and memory use to spot problems.

-'Top'

Note: top is used to display all running and active real-time processes


-'VmStat'

Note: VmStat is used to display statistics of virtual memory


-'Htop'

Notes: htop is a user friendly version of top and is a real-time linux process monitoring tool 


-'iotop'

Note: iotop is similar to top command and htop but it has an accounting function


-'df'

Note; displays information about file system disk space


-'uptime'

Note: used to tell how long the linux system has been running

--LOG MONITORING --

Journalctl, views/manage logs collectd by systemd journal. Gives detailed info about system/serive events

Journalctl

-'Journalctl -f'

Note: follows logs in real time

-'Journalctl -u <service name>'

Note: Look at logs for specific service 

-'Journalctl -b --since "2024-10-17-10:00:00"'

Note: view log from a specific date or time


/var/log, stores log files . Helps users monitor and troubleshoot the system

-'cat /var/log/syslog'

Note: Displays entire system log.

-'less /var/log/syslog'

Note: Will open system log 

-'tail /var/log/syslog'

Note: lets you see the last 10 lines of the system log

-'tail -f /var/log/syslog'

Note: continuesly shows new log entires as they happen 

--AUTHENTICATION LOGS--

cat /var/log/auth.log : look at authentication attemptes.


----------------------
SYSTEM SECURITY
----------------------


Definition: system security protects computers systems and networks from un authorized access and attacks.


-'Least Privilege' 

Note: Grants users minimum permissions necessary

-'Regular Updates' 

Notes: Keeps the system and software updated

-'User Account Manegement'

Note: use strong passwords, manage user accounts properly, and disable unnecessary accounts

-'file Permissions' 

Note- set proper permissions for files and directories using 'chmod' 'chown' 'umask'

-'Firewall configuration'

Note: uses 'iptable' and 'ufw' to help control incoming/outgoing traffic

-'Logging monitoring'

Note: monitor system logs using 'syslog' or 'Journalctl'

-'Disable Unused services'

Note: Turn off unnecessary servicesto help reduce attack surfaces


---------------------
FILE PERMISSIONS
---------------------


-'chown'
Usage: chown [owner]:[group] filename
Example: chown steve:admin file.txt
Note:this changes the owner of the file to user 'steve' and the group to admine 


-'chmod'
Usage: chmod [permissions] filename
Example: chmod 755 script.sh
Note: this allows the owner to read, write, and execute the file while others can only read it.


-'ls -l'
Usage: ls -l
Example: -rwxr-xr-x 1 john admin  1234 Oct 18 10:00 script.sh
Notes: this will show owner, group, file size, last modified date, and tlast but not least the file name!


---------------------
USER MANAGEMENT
---------------------

-------------------
how to create users
-------------------

- use commands such as adduser or useradd

1. 'sudo adduser unsername'

2. 'sudo usermod -aG sudo username'

3. 'password requisite pam_pwquality.so minlen=8 ucredit=-1 lcredit=-1 dcredit=-1 ocredit=-1'

4. 'PermitRootLogin no'

5. 'sudo systemctl restasrt sshd'

6. 'AllowUsers username'

7.'sudo chmod 700 /home/username'

8.'last'


---------------------
how to modify users
---------------------

1. 'sudo usermod -l newname oldname'

2. 'sudo usermod -d /new/home/directory username

3. 'sudo usermod -aG groupname username'

4. 'sudo passwd username'


---------------------
how to delete users 
---------------------

1. 'sudo deluser username'

2. 'sudo deluser --remove-home username'


------------------------------
FIREWALL BASICS
------------------------------

-'ufw'

Note: is a simple tool for managing firewall rules in linux, allowing and blocking specific connectionsto enhance system security.


----------------
How to enable it
----------------

1. 'sudo ufw enable

2. 'sudo ufw status'


-------------------
how to allow ports
-------------------

1. 'sudo ufw allow port_number'

2. 'sudo ufw allow 80'

---------------------
how to deny protects
---------------------

1. 'sudo ufw deny port_number'

2. 'sudo ufw deny 22'

